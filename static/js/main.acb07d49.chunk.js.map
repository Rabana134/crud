{"version":3,"sources":["firebase.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorial.component.js","components/tutorials-list.component.js","components/contact.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","db","ref","tutorial","push","key","value","child","update","remove","AddTutorial","props","onChangeTitle","bind","onChangeDescription","saveTutorial","newTutorial","state","title","description","published","submitted","e","this","setState","target","data","TutorialDataService","create","then","console","log","catch","className","onClick","htmlFor","type","id","required","onChange","name","Component","Tutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","message","prevState","status","delete","refreshList","nextProps","TutorialsList","setActiveTutorial","removeAllTutorials","onDataChange","tutorials","currentIndex","getAll","on","off","items","forEach","item","val","index","deleteAll","map","contact","style","textJustify","textAlign","marginTop","App","href","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.acb07d49.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\nimport \"firebase/database\";\n\nlet config = {\n  apiKey: \"AIzaSyBesIKenC1LlO_ziYJzZYMkqtvtN_VIxFQ\",\n  authDomain: \"nafi-901f3.firebaseapp.com\",\n  projectId: \"nafi-901f3\",\n  storageBucket: \"nafi-901f3.appspot.com\",\n  messagingSenderId: \"120199671664\",\n  appId: \"1:120199671664:web:40a35fae96b7c308f829b5\",\n  databaseURL: \"https://nafi-901f3-default-rtdb.firebaseio.com/\",\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase.database();\n","import firebase from \"../firebase\";\n\nconst db = firebase.ref(\"/tutorials\");\n\nclass TutorialDataService {\n  getAll() {\n    return db;\n  }\n\n  create(tutorial) {\n    return db.push(tutorial);\n  }\n\n  update(key, value) {\n    return db.child(key).update(value);\n  }\n\n  delete(key) {\n    return db.child(key).remove();\n  }\n\n  deleteAll() {\n    return db.remove();\n  }\n}\n\nexport default new TutorialDataService();\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveTutorial = this.saveTutorial.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false,\n    };\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value,\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  saveTutorial() {\n    let data = {\n      title: this.state.title,\n      description: this.state.description,\n      published: false\n    };\n\n    TutorialDataService.create(data)\n      .then(() => {\n        console.log(\"Created new item successfully!\");\n        this.setState({\n          submitted: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  newTutorial() {\n    this.setState({\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.title}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Matric number</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateTutorial = this.updateTutorial.bind(this);\n    this.deleteTutorial = this.deleteTutorial.bind(this);\n\n    this.state = {\n      currentTutorial: {\n        key: null,\n        title: \"\",\n        description: \"\",\n        published: false,\n      },\n      message: \"\",\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { tutorial } = nextProps;\n    if (prevState.currentTutorial.key !== tutorial.key) {\n      return {\n        currentTutorial: tutorial,\n        message: \"\"\n      };\n    }\n\n    return prevState.currentTutorial;\n  }\n\n  componentDidMount() {\n    this.setState({\n      currentTutorial: this.props.tutorial,\n    });\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          title: title,\n        },\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n\n    this.setState((prevState) => ({\n      currentTutorial: {\n        ...prevState.currentTutorial,\n        description: description,\n      },\n    }));\n  }\n\n  updatePublished(status) {\n    TutorialDataService.update(this.state.currentTutorial.key, {\n      published: status,\n    })\n      .then(() => {\n        this.setState((prevState) => ({\n          currentTutorial: {\n            ...prevState.currentTutorial,\n            published: status,\n          },\n          message: \"The status was updated successfully!\",\n        }));\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  updateTutorial() {\n    const data = {\n      title: this.state.currentTutorial.title,\n      description: this.state.currentTutorial.description,\n    };\n\n    TutorialDataService.update(this.state.currentTutorial.key, data)\n      .then(() => {\n        this.setState({\n          message: \"The user was updated successfully!\",\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  deleteTutorial() {\n    TutorialDataService.delete(this.state.currentTutorial.key)\n      .then(() => {\n        this.props.refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentTutorial } = this.state;\n\n    return (\n      <div>\n        <h4>Details of candidate</h4>\n        {currentTutorial ? (\n          <div className=\"edit-form\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentTutorial.title}\n                  onChange={this.onChangeTitle}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Matric number</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  value={currentTutorial.description}\n                  onChange={this.onChangeDescription}\n                />\n              </div>\n            </form>\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteTutorial}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateTutorial}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Tutorial...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nimport Tutorial from \"./tutorial.component\";\n\nexport default class TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n    };\n  }\n\n  componentDidMount() {\n    TutorialDataService.getAll().on(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    TutorialDataService.getAll().off(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let tutorials = [];\n\n    items.forEach((item) => {\n      let key = item.key;\n      let data = item.val();\n      tutorials.push({\n        key: key,\n        title: data.title,\n        description: data.description,\n        published: data.published,\n      });\n    });\n\n    this.setState({\n      tutorials: tutorials,\n    });\n  }\n\n  refreshList() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1,\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index,\n    });\n  }\n\n  removeAllTutorials() {\n    TutorialDataService.deleteAll()\n      .then(() => {\n        this.refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { tutorials, currentTutorial, currentIndex } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <h4>Candidate List</h4>\n\n          <ul className=\"list-group\">\n            {tutorials &&\n              tutorials.map((tutorial, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\n                  key={index}\n                >\n                  {tutorial.title}\n                </li>\n              ))}\n          </ul>\n\n          <button\n            className=\"m-3 btn btn-sm btn-danger\"\n            onClick={this.removeAllTutorials}\n          >\n            Remove All\n          </button>\n        </div>\n        <div className=\"col-md-6\">\n          {currentTutorial ? (\n            <Tutorial\n              tutorial={currentTutorial}\n              refreshList={this.refreshList}\n            />\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a Tutorial...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react'\r\n\r\nfunction contact() {\r\n  return (\r\n    <div>\r\n    <div >\r\n    <h3 style={{textJustify:\"inter-word\",textAlign:\"justify\"}}>\r\n    We are a team of software and web development company. Our job is to bring your ideas to live.\r\n    </h3>\r\n    <h3 style={{textJustify:\"inter-word\",textAlign:\"justify\",marginTop:\"2rem\"}}>\r\n   <h3>Contact us:</h3>\r\n   Email: rabolution@rabolutionltd.com\r\n   Or \r\n   WhatsApp: +2348185938974\r\n   Or \r\n   Instagram: @Rabolution\r\n    </h3>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default contact","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport TutorialsList from \"./components/tutorials-list.component\";\nimport contact from \"./components/contact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/tutorials\" className=\"navbar-brand\">\n          Created by Rabolution\n          </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/tutorials\"} className=\"nav-link\">\n                Candidates\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/contact\"}  className=\"nav-link\">\n                Contact Rabolution\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <h2>Candidate management system </h2>\n          <Switch>\n            <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n            <Route exact path=\"/add\" component={AddTutorial} />\n            <Route exact path=\"/contact\" component={contact} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}